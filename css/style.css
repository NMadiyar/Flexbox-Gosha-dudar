*{
    margin: 0;
    padding: 0;
}
/*@media используется для того, чтобы определенные стили работали в заданных условиях,
прописанных в медиа, в данном случае, если мин ширина равна 600px, то стили не будут работать
 */
@media(min-width: 1000px) {
    .container-1 {
        /*создаем контейнер, при его создании указываем значение flex,
        что означает, все его значения будут распологаться в ряд*/
        display: flex;
        /*по стандарту, у флексбоксов значения высоты задаются по самому длиному
        боксу, но есть значение align-items, если указать align-items: flex-start
        то высота боксов будут прижаты к верху, а не как по стандарту, одинаковая высота
        по самому длиному боксу.
        align-items: flex-end боксы будут прижаты к низу, к одному из самых длиных
        блоков.
        align-items: center блоки будут стоят по центру, от самого высокого блока
        align-items: stretch является стандартным значением
         */
        align-items: stretch;
        /*flex-direction:column делает боксы в колону, а не вертикально*/
        /*flex-direction: column-reverse делает боксы в колонну, но наоборот, т.е
        от значения flex: 3 к значению flex: 1
         */
        /*flex-direction: row стоят вертикально, стандартное значение, а есть
        flex-direction: row-reverse так же вертикально, но значения наоборот
         */
        flex-direction: row;
    }
}
.container-2 {
        /*justify-content отвечает за расположение, расширяет (ширина от шрифта,justify)*/
        /*justify-conter: flex-start это значение по умолчанию, т.е слева*/
        /*justify-content: center распологает боксы в центре*/
        /*justify-content: space-around распологает боксы равномерно между друг другом, сколько
        бы боксов не было, оставляее какое-то пространство*/
        /*justify-content: space-between распологает блоки равномерно между друг другом, но
        занимает всю ширину*/
        display: flex;
        justify-content: space-between;
        /*flex-wrap отвечает за перенос текста при адаптивности, т.е блок уходит вниз*/
       flex-wrap: wrap;
    }

.container-1 div, .container-2 div{
    padding: 10px;
    border: 1px solid silver;
}
/*flex 1,2,3 отвечает за место блока, чем больше значение, тем больше важность*/
.box-1{
    flex: 1;
    /*order означает порядок, можно менять местами значения в контейнере*/
    order: 2;
}
.box-2{
    flex: 1;
    order: 1;
}
.box-3{
    flex: 1;
    order: 3;
}
.box{
    /*во flexbox не используется значение width, а используется значение flex-basis, делает
    абсолютно тоже, что и width*/
    flex-basis: 20%;
}